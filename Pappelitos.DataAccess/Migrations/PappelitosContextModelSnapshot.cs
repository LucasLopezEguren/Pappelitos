// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pappelitos.DataAccess;

namespace Pappelitos.DataAccess.Migrations
{
    [DbContext(typeof(PappelitosContext))]
    partial class PappelitosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pappelitos.Domain.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mail");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Pappelitos.Domain.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<int?>("MatchId");

                    b.Property<string>("Word");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MatchId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("Pappelitos.Domain.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Pappelitos.Domain.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId");

                    b.Property<int>("ScoreA");

                    b.Property<int>("ScoreB");

                    b.Property<int>("TimePerRound");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("Pappelitos.Domain.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId");

                    b.Property<int?>("MatchId");

                    b.Property<int?>("MatchId1");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("MatchId");

                    b.HasIndex("MatchId1");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("Pappelitos.Domain.Card", b =>
                {
                    b.HasOne("Pappelitos.Domain.Category")
                        .WithMany("Cards")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Pappelitos.Domain.Match")
                        .WithMany("Cards")
                        .HasForeignKey("MatchId");
                });

            modelBuilder.Entity("Pappelitos.Domain.Match", b =>
                {
                    b.HasOne("Pappelitos.Domain.Account")
                        .WithMany("Matches")
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("Pappelitos.Domain.Player", b =>
                {
                    b.HasOne("Pappelitos.Domain.Account")
                        .WithMany("Players")
                        .HasForeignKey("AccountId");

                    b.HasOne("Pappelitos.Domain.Match")
                        .WithMany("TeamA")
                        .HasForeignKey("MatchId");

                    b.HasOne("Pappelitos.Domain.Match")
                        .WithMany("TeamB")
                        .HasForeignKey("MatchId1");
                });
#pragma warning restore 612, 618
        }
    }
}
